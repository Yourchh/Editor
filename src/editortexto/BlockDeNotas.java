/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package editortexto;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;

/**
 *
 * @author hu220
 */
public class BlockDeNotas extends javax.swing.JFrame {

//    ArrayList<String> historico = new ArrayList<>();
//    Clipboard portapapeles = Toolkit.getDefaultToolkit().getSystemClipboard();
    private String accionAnterior;
    private final Clipboard clipboard;
    String ruta = "";
    String titulo;
    String textoABuscar;

    /**
     * Creates new form Editor
     */
    public BlockDeNotas() {
        initComponents();
        titulo = "Sin titulo";
        setTitle(titulo + ": Block de notas");
        accionAnterior = null;
        clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        btnAjustes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaContenido = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        mnuAbrir = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuDeshacer = new javax.swing.JMenuItem();
        mnuCortar = new javax.swing.JMenuItem();
        mnuCopiar = new javax.swing.JMenuItem();
        mnuPegar = new javax.swing.JMenuItem();
        mnuEliminar = new javax.swing.JMenuItem();
        mnuBuscar = new javax.swing.JMenuItem();
        mnuBuscarSiguiente = new javax.swing.JMenuItem();
        mnuBuscarAnterior = new javax.swing.JMenuItem();
        mnuReemplazar = new javax.swing.JMenuItem();
        mnuIra = new javax.swing.JMenuItem();
        mnuSeleccionarTodo = new javax.swing.JMenuItem();
        mnuFechaHora = new javax.swing.JMenuItem();
        mnuFormato = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuVer = new javax.swing.JMenu();
        mnuBarraEstado = new javax.swing.JCheckBoxMenuItem();
        mnuAjusteLinea = new javax.swing.JCheckBoxMenuItem();
        mnuAyuda = new javax.swing.JMenu();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnAjustes.setForeground(new java.awt.Color(255, 255, 255));
        btnAjustes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-ajustes.gif"))); // NOI18N
        btnAjustes.setBorder(null);
        btnAjustes.setOpaque(true);
        btnAjustes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjustesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(471, Short.MAX_VALUE)
                .addComponent(btnAjustes)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAjustes)
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtaContenido.setColumns(20);
        txtaContenido.setRows(5);
        jScrollPane1.setViewportView(txtaContenido);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        mnuArchivo.setMnemonic('A');
        mnuArchivo.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/archivo-nuevo.png"))); // NOI18N
        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuArchivo.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/internet.png"))); // NOI18N
        jMenuItem2.setText("Ventana nueva");
        mnuArchivo.add(jMenuItem2);

        mnuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/abrir-esquema-de-carpeta.png"))); // NOI18N
        mnuAbrir.setText("Abrir...");
        mnuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAbrirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuAbrir);

        btnGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ahorrar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(btnGuardar);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar-como.png"))); // NOI18N
        jMenuItem5.setText("Guardar como...");
        mnuArchivo.add(jMenuItem5);
        mnuArchivo.add(jSeparator1);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuraciones-web.png"))); // NOI18N
        jMenuItem6.setText("Configurar pagina");
        mnuArchivo.add(jMenuItem6);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir-contorno-del-boton.png"))); // NOI18N
        jMenuItem7.setText("Imprimir");
        mnuArchivo.add(jMenuItem7);
        mnuArchivo.add(jSeparator2);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion (1).png"))); // NOI18N
        jMenuItem8.setText("Salir");
        mnuArchivo.add(jMenuItem8);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setMnemonic('A');
        mnuEdicion.setText("Edicion");

        mnuDeshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/deshacer.png"))); // NOI18N
        mnuDeshacer.setText("Deshacer");
        mnuDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDeshacerActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuDeshacer);

        mnuCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuCortar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bote-de-basura-cortado.png"))); // NOI18N
        mnuCortar.setText("Cortar");
        mnuCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCortarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuCortar);

        mnuCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/dupdo.png"))); // NOI18N
        mnuCopiar.setText("Copiar");
        mnuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCopiarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuCopiar);

        mnuPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuPegar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/pegar.png"))); // NOI18N
        mnuPegar.setText("Pegar");
        mnuPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPegarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuPegar);

        mnuEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        mnuEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/circulo-cruzado.png"))); // NOI18N
        mnuEliminar.setText("Eliminar");
        mnuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEliminarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuEliminar);

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/buscar-alt.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        mnuBuscarSiguiente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        mnuBuscarSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/flecha-pequena-derecha.png"))); // NOI18N
        mnuBuscarSiguiente.setText("Buscar siguiente");
        mnuBuscarSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarSiguienteActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscarSiguiente);

        mnuBuscarAnterior.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        mnuBuscarAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/flecha-pequena-derecha (1).png"))); // NOI18N
        mnuBuscarAnterior.setText("Buscar anterior");
        mnuBuscarAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarAnteriorActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscarAnterior);

        mnuReemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuReemplazar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/reemplazar.png"))); // NOI18N
        mnuReemplazar.setText("Reemplazar");
        mnuReemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReemplazarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuReemplazar);

        mnuIra.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuIra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/diamante-gira-a-la-derecha.png"))); // NOI18N
        mnuIra.setText("Ir a");
        mnuIra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuIraActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuIra);

        mnuSeleccionarTodo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuSeleccionarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/seleccionar.png"))); // NOI18N
        mnuSeleccionarTodo.setText("Seleccionar todo");
        mnuSeleccionarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSeleccionarTodoActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuSeleccionarTodo);

        mnuFechaHora.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        mnuFechaHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/calendario-reloj.png"))); // NOI18N
        mnuFechaHora.setText("Fecha y hora");
        mnuFechaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFechaHoraActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuFechaHora);

        jMenuBar1.add(mnuEdicion);

        mnuFormato.setMnemonic('A');
        mnuFormato.setText("Formato");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imagenes/comprobacion-de-texto.png"))); // NOI18N
        jMenuItem3.setText("Fuente");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnuFormato.add(jMenuItem3);

        jMenuBar1.add(mnuFormato);

        mnuVer.setMnemonic('A');
        mnuVer.setText("Ver");

        mnuBarraEstado.setSelected(true);
        mnuBarraEstado.setText("Barra de estado");
        mnuBarraEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBarraEstadoActionPerformed(evt);
            }
        });
        mnuVer.add(mnuBarraEstado);

        mnuAjusteLinea.setSelected(true);
        mnuAjusteLinea.setText("Ajuste de linea");
        mnuAjusteLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAjusteLineaActionPerformed(evt);
            }
        });
        mnuVer.add(mnuAjusteLinea);

        jMenuBar1.add(mnuVer);

        mnuAyuda.setMnemonic('A');
        mnuAyuda.setText("Ayuda");
        jMenuBar1.add(mnuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName("Sin Titulo: Block de notas");
        getAccessibleContext().setAccessibleDescription("Sin Titulo: Block de notas");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        JFileChooser fc = new JFileChooser();
        String texto = txtaContenido.getText();
        if (texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay texto para guardar", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            if (!ruta.isEmpty()) {
                try {
                    PrintWriter pw = new PrintWriter(new File(ruta));
                    pw.print(txtaContenido.getText());
                    pw.close();
                } catch (Exception e) {
                }
            } else {

                fc.addChoosableFileFilter(new FileNameExtensionFilter(".txt", "txt", "Todos los archivos"));

                int seleccion = fc.showSaveDialog(null);
                try {
                    if (seleccion == JFileChooser.APPROVE_OPTION) {
                        File JFC = fc.getSelectedFile();
                        String path = JFC.getAbsolutePath();
                        PrintWriter pw = new PrintWriter(JFC);
                        pw.print(txtaContenido.getText());
                        pw.close();

                        if (!path.endsWith(".txt")) {
                            File temp = new File(path + ".txt");
                            JFC.renameTo(temp);
                            this.setTitle(titulo);
                        }
                        this.setTitle(JFC.getName() + ": Editor de texto");
                        JOptionPane.showMessageDialog(this, "Archivo guardado correctamente", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        ruta = JFC.getPath();
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error, no se guardo el archivo", "Aviso", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void mnuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAbrirActionPerformed
        String path = "";
        JFileChooser JFC = new JFileChooser();
        JFC.setFileFilter(new FileNameExtensionFilter("todos los archivos *.TXT", "txt", "TXT"));
        int abrir = JFC.showDialog(null, "Abrir");
        if (abrir == JFileChooser.APPROVE_OPTION) {
            FileReader FR = null;
            BufferedReader BR = null;

            try {
                File archivo = JFC.getSelectedFile();//abre un archivo .lengf
                ruta = archivo.getPath();

                String PATH = JFC.getSelectedFile().getAbsolutePath();
                if (PATH.endsWith(".txt") || PATH.endsWith(".TXT")) {

                    FR = new FileReader(archivo);
                    BR = new BufferedReader(FR);

                    String linea;//variable para leer linea por linea el archivo de entrada
                    if (path.compareTo(archivo.getAbsolutePath()) == 0) {
                        JOptionPane.showMessageDialog(this, "Archivo Abierto", "Aviso", JOptionPane.ERROR_MESSAGE);
                    } else {
                        path = archivo.getAbsolutePath();
                        txtaContenido.setText(null);//limpiamos el textArea antes de sobreescribir
                        while ((linea = BR.readLine()) != null) { //cuando termina el texto del archivo?
                            txtaContenido.append(linea + "\n");//utilizamos append para escribir en el textArea
                        }
                    }
                    this.setTitle(archivo.getName());
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo no soportado", "Aviso", JOptionPane.ERROR_MESSAGE);
                }

            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (null != FR) {
                        FR.close();
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                    //Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_mnuAbrirActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new fuente(txtaContenido).setVisible(true);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btnAjustesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjustesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAjustesActionPerformed

    private void mnuDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDeshacerActionPerformed
        if (accionAnterior != null) {
            txtaContenido.setText(accionAnterior);
            accionAnterior = null;
        }
    }//GEN-LAST:event_mnuDeshacerActionPerformed

    private void mnuBuscarAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarAnteriorActionPerformed
        int indiceEncontrado = txtaContenido.getText().lastIndexOf(textoABuscar, txtaContenido.getCaretPosition());
        if (indiceEncontrado != -1) {
            txtaContenido.select(indiceEncontrado, indiceEncontrado + textoABuscar.length());
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la coincidencia anterior.");
        }
    }//GEN-LAST:event_mnuBuscarAnteriorActionPerformed

    public static boolean esNumeroEntero(String valor) {
        try {
            Integer.parseInt(valor);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public int obtenerNumeroEntero(String valor) throws NumberFormatException {
        if (esNumeroEntero(valor)) {
            return Integer.parseInt(valor);
        } else {
            JOptionPane.showMessageDialog(this, "Error, solo ingrese numeros.");
        }
        return 0;
    }

    private void mnuIraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuIraActionPerformed
        String line = JOptionPane.showInputDialog(this, "Introduzca el numero de linea a la que quiere ir: ");
        int linea = obtenerNumeroEntero(line);
        if (linea != 0) {
            try {
                int lineaActual = txtaContenido.getLineOfOffset(txtaContenido.getCaretPosition());
            } catch (BadLocationException ex) {
                Logger.getLogger(BlockDeNotas.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (linea >= 1 && linea <= txtaContenido.getLineCount()) {
                int offset = 0;
                try {
                    offset = txtaContenido.getLineStartOffset(linea - 1);
                } catch (BadLocationException ex) {
                    Logger.getLogger(BlockDeNotas.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtaContenido.setCaretPosition(offset);
            } else {
                JOptionPane.showMessageDialog(this, "Número de línea inválido.");
            }
        }
    }//GEN-LAST:event_mnuIraActionPerformed

    private void mnuBarraEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBarraEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuBarraEstadoActionPerformed

    private void mnuAjusteLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAjusteLineaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuAjusteLineaActionPerformed

    private void mnuCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCortarActionPerformed
        accionAnterior = txtaContenido.getText();
        int seleccionInicio = txtaContenido.getSelectionStart();
        int seleccionFin = txtaContenido.getSelectionEnd();
        String textoSeleccionado = txtaContenido.getText().substring(seleccionInicio, seleccionFin);
        txtaContenido.replaceRange("", seleccionInicio, seleccionFin);

        StringSelection stringSelection = new StringSelection(textoSeleccionado);
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_mnuCortarActionPerformed

    private void mnuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCopiarActionPerformed
        accionAnterior = txtaContenido.getText();
        int seleccionInicio = txtaContenido.getSelectionStart();
        int seleccionFin = txtaContenido.getSelectionEnd();
        String textoSeleccionado = txtaContenido.getText().substring(seleccionInicio, seleccionFin);

        StringSelection stringSelection = new StringSelection(textoSeleccionado);
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_mnuCopiarActionPerformed

    private void mnuPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPegarActionPerformed
        accionAnterior = txtaContenido.getText();
        Transferable contents = Toolkit.getDefaultToolkit().getSystemClipboard().getContents(this);
        if (contents != null && contents.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                String contenidoPortapapeles = (String) contents.getTransferData(DataFlavor.stringFlavor);
                int posicionCursor = txtaContenido.getCaretPosition();
                txtaContenido.insert(contenidoPortapapeles, posicionCursor);
            } catch (UnsupportedFlavorException | IOException ex) {
                // Maneja la excepción si ocurre un error al obtener el texto
                ex.printStackTrace();
            }
        } else {
            // Notifica al usuario que no hay texto disponible en el portapapeles
            JOptionPane.showMessageDialog(this, "No hay texto disponible en el portapapeles.");
        }
    }//GEN-LAST:event_mnuPegarActionPerformed

    private void mnuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEliminarActionPerformed
        accionAnterior = txtaContenido.getText();
        int seleccionInicio = txtaContenido.getSelectionStart();
        int seleccionFin = txtaContenido.getSelectionEnd();
        txtaContenido.replaceRange("", seleccionInicio, seleccionFin);
    }//GEN-LAST:event_mnuEliminarActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        textoABuscar = JOptionPane.showInputDialog(this, "Introduzca el texto a buscar:");
        if (textoABuscar != null && !textoABuscar.isEmpty()) {
            int indiceEncontrado = txtaContenido.getText().indexOf(textoABuscar);
            if (indiceEncontrado != -1) {
                txtaContenido.setSelectionStart(indiceEncontrado);
                txtaContenido.setSelectionEnd(indiceEncontrado + textoABuscar.length());
            } else {
                JOptionPane.showMessageDialog(this, "No se ha encontrado el texto \"" + textoABuscar + "\".");
            }
        }
    }//GEN-LAST:event_mnuBuscarActionPerformed

    private void mnuBuscarSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarSiguienteActionPerformed
        int indiceEncontrado = txtaContenido.getText().indexOf(textoABuscar, txtaContenido.getCaretPosition());
        if (indiceEncontrado != -1) {
            txtaContenido.select(indiceEncontrado, indiceEncontrado + textoABuscar.length());
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la siguiente coincidencia.");
        }
    }//GEN-LAST:event_mnuBuscarSiguienteActionPerformed

    private void mnuReemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReemplazarActionPerformed
        String textoBuscar = JOptionPane.showInputDialog(this, "Introduzca el texto a reemplazar:");
        String textoReemplazar = JOptionPane.showInputDialog(this, "Introduzca el nuevo texto:");
        String nuevoTexto = txtaContenido.getText().replaceAll(textoBuscar, textoReemplazar);
        txtaContenido.setText(nuevoTexto);
    }//GEN-LAST:event_mnuReemplazarActionPerformed

    private void mnuSeleccionarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSeleccionarTodoActionPerformed
        txtaContenido.selectAll();
    }//GEN-LAST:event_mnuSeleccionarTodoActionPerformed

    private void mnuFechaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFechaHoraActionPerformed
        String fechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date());
        txtaContenido.insert(fechaHora, txtaContenido.getCaretPosition());
    }//GEN-LAST:event_mnuFechaHoraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlockDeNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlockDeNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlockDeNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlockDeNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlockDeNotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjustes;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem mnuAbrir;
    private javax.swing.JCheckBoxMenuItem mnuAjusteLinea;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenu mnuAyuda;
    private javax.swing.JCheckBoxMenuItem mnuBarraEstado;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenuItem mnuBuscarAnterior;
    private javax.swing.JMenuItem mnuBuscarSiguiente;
    private javax.swing.JMenuItem mnuCopiar;
    private javax.swing.JMenuItem mnuCortar;
    private javax.swing.JMenuItem mnuDeshacer;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuEliminar;
    private javax.swing.JMenuItem mnuFechaHora;
    private javax.swing.JMenu mnuFormato;
    private javax.swing.JMenuItem mnuIra;
    private javax.swing.JMenuItem mnuPegar;
    private javax.swing.JMenuItem mnuReemplazar;
    private javax.swing.JMenuItem mnuSeleccionarTodo;
    private javax.swing.JMenu mnuVer;
    private javax.swing.JTextArea txtaContenido;
    // End of variables declaration//GEN-END:variables
}
